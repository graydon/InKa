 +INSERT
STRUCTURE 0 s (nat):nat
 |
 +INSERT
STRUCTURE nil cons (nat list):list
 |
 +INSERT
FUNCTION plus (n1,n2:nat):nat =
IF n1 = 0 THEN n2
IF EX n3:nat n1 = s (n3) THEN s (plus (n3 n2))
 |
 +INSERT
FUNCTION times (n1,n2:nat):nat =
IF n1 = 0 THEN 0
IF EX n3:nat n1 = s (n3) THEN plus (n2 times (n3 n2))
 |
 +INSERT
FUNCTION difference (n1,n2:nat):nat =
IF n2 = 0 THEN n1
IF NOT n2 = 0 AND n1 = 0 THEN 0
IF EX n3,n4:nat n1 = s (n3) AND n2 = s (n4) THEN difference (n3 n4)
 |
 +INSERT
PREDICATE Less (n1,n2:nat) =
IF n2 = 0 THEN False
IF NOT n2 = 0 AND n1 = 0 THEN True
IF EX n3,n4:nat n1 = s (n3) AND n2 = s (n4) THEN Less (n3 n4)
 |
 +INSERT
FUNCTION quotient (n1,n2:nat):nat =
IF n2 = 0 THEN 0
IF NOT n2 = 0 AND Less (n1 n2) THEN 0
IF NOT n2 = 0 AND NOT Less (n1 n2) THEN s (quotient (difference (n1 n2) n2))
 |
 +INSERT
FUNCTION remainder (n1,n2:nat):nat =
IF Less (n1 n2) THEN n1
IF n2 = 0 AND NOT Less (n1 n2) THEN 0
IF NOT n2 = 0 AND NOT Less (n1 n2) THEN remainder (difference (n1 n2) n2)
 |
 +INSERT
FUNCTION gcd (n1,n2:nat):nat =
IF n1 = 0 THEN n2
IF NOT n1 = 0 AND n2 = 0 THEN n1
IF EX n3,n4:nat n1 = s (n3) AND n2 = s (n4) AND Less (n1 n2)
   THEN gcd (n1 difference (n2 n1))
IF EX n5,n6:nat n1 = s (n5) AND n2 = s (n6) AND NOT Less (n1 n2)
   THEN gcd (difference (n1 n2) n2)
 |
 +INSERT
PREDICATE Divides (n1,n2:nat) = remainder (n2 n1) = 0
 |
 +INSERT
commutative(plus)
 |
 +INSERT
associative(plus)
 |
 +INSERT
commutative(times)
 |
 +INSERT
ALL n1,n2,n3:nat times (n1 plus (n2 n3)) = plus (times (n1 n2) times (n1 n3))
 |
 +INSERT
associative(times)
 |
 +INSERT
ALL n1,n2:nat difference (plus (n2 n1) n2) = n1
 |
 +INSERT
ALL n1,n2,n3:nat
    (Less (n3 n2)
     IMPL plus (difference (n2 n3) n1) = difference (plus (n2 n1) n3))
 |
 +INSERT
ALL n1:nat quotient (s (n1) s (0)) = s (quotient (n1 s (0)))
 |
 +INSERT
ALL n1,n2:nat (NOT Less (n2 n1) IMPL plus (difference (n2 n1) n1) = n2)
 |
 +INSERT
ALL n1,n2:nat
    (NOT n1 = 0
     IMPL plus (remainder (n2 n1) times (n1 quotient (n2 n1))) = n2)
 |
 +INSERT
ALL n1,n2,n3:nat difference (plus (n3 n2) plus (n3 n1)) = difference (n2 n1)
 |
 +INSERT
ALL n1,n2,n3:nat
    difference (times (n3 n2) times (n1 n2)) = times (difference (n3 n1) n2)
 |
 -INSERT
  all x,y,z:nat gcd(times(x z) times(y z)) = times(gcd(x y) Z)
 |
 -INSERT
ALL n1,n2:nat (NOT n2 = 0 IMPL Less (remainder (n1 n2) n2))
 |
 -INSERT
;   all x,y:nat remainder(x gcd(x y))=0 and remainder(y gcd(x y))=0
 |
 -INSERT
ALL n1,n2:nat
    ((NOT n1 = s (0) AND NOT n1 = 0 AND NOT n2 = 0)
     IMPL Less (quotient (n2 n1) n2))
 |
 -INSERT
PREDICATE Prime1 (n1,n2:nat) =
IF n2 = 0 THEN False
IF n2 = s (0) THEN True
IF EX n3:nat n2 = s (n3) AND NOT n3 = 0
   THEN (Prime1 (n1 n3) AND NOT Divides (n2 n1))
 |
 OK
